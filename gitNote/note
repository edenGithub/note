Git

安装与配置Git
	直接安装Xcode，Xcode集成了Git。
	安装完成后需要配置本机Git的userName和userEmail
	git config --global user.name "Your name"
	git config --global user.email "Your email"

创建版本库
	选择一个合适的地方，通过git init命令把这个目录变成Git可以管理的仓库。
	把文件放到Git仓库分为两步：
		git add <file>
		git commit -m "wrote a readme file"

时光穿梭机
	git diff <file>命令查看修改内容

版本回退
	git log命令显示从最近到最远的提交日志
	如果嫌输出信息太多，可以加上--pretty=oneline参数
	git提供一个命令git reflog用来记录你的每一次命令，这样即可查看到未来版本的commitId
	git reset --hard commit_id

工作区和暂存区
	git提供一个叫做stage的暂存区

撤销修改
	当你改乱了工作区的某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file
	当你不但改乱了工作区的某个文件的内容，还添加到了stage暂存区，想丢弃修改分两步，第一步用git reset HEAD file回到上一场景，第二部就按照上一步操作

远程仓库
	创建SSH Key使用命令ssh-keygen -t rsa -C "your email"，然后一路回车就可以了
	可以把一个已有的仓库与github关联，在本地的仓库下运行命令：
		git remote add origin git@github.com:edenGithub/note.git
	推送master分支所有内容
		git push -u origin master
	从github克隆
		git clone git@github.com:edenGithub/note.git
		另一种写法：git clone https://github.com/edenGithub/note

分支
	查看所有分支：git branch
	创建分支：git branch <name>
	切换分支：git checkout <name>
	创建+切换分支：git checkout -b <name>
	合并某分支到当前分支：git merge <name>
	删除分支：git branch -d <name>
	git log --graph查看分支结构图
	合并分支时，加上--no-ff参数就可以用普通方式合并，合并后的历史有分支，能看出来曾经做的合并，而fast forward看不出来曾经做过合并
	删除github上的分支：git push origin :dev

Bug分支
	当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后再git stash pop，回到工作现场。
	git stash list查看所有stash	git stash clear清除掉stash

feature分支
	如果想要丢弃一个没有被合并过得分支，可以通过git branch -D <name>强行删除。

多人协作
	查看远程库的信息：git remote
	查看远程库详细信息：git remote -v
	本地新建分支如果不推送到远程，对其他人就是不可见的
	在本地创建和远程对应的分支，使用git checkout -b dev origin/dev，本地和远程的分支最好一样
	建立本地分支和远程分支的关联，使用git branch --set-upstream dev origin/dev
	从远程抓取分支，使用git pull，如果有冲突，要先处理冲突

标签
	在当前commit打一个新的标签：git tag v1.0
	给对应的commit_id打一个标签：git tag v0.9 4s4c44a
	可以创建带有说明的标签：git tag -a v1.0 -m "version 1.0 released" 4s4c44a
	查看标签信息：git show v1.0

操作标签
		



